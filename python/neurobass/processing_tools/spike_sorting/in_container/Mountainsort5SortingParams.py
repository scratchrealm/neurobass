from pydantic import BaseModel, Field

class Mountainsort5SortingParams(BaseModel):
    scheme: str = Field("2", description="Which sorting scheme to use: '1, '2', or '3'")
    detect_threshold: float = Field(5.5, description="Detection threshold - recommend to use the default")
    detect_sign: int = Field(-1, description="Use -1 for detecting negative peaks, 1 for positive, 0 for both")
    detect_time_radius_msec: float = Field(0.5, description="Determines the minimum allowable time interval between detected spikes in the same spatial region")
    snippet_T1: int = Field(20, description="Number of samples before the peak to include in the snippet")
    snippet_T2: int = Field(20, description="Number of samples after the peak to include in the snippet")
    npca_per_channel: int = Field(3, description="Number of PCA features per channel in the initial dimension reduction step")
    npca_per_subdivision: int = Field(10, description="Number of PCA features to compute at each stage of clustering in the isosplit6 subdivision method")
    snippet_mask_radius: int = Field(250, description="Radius of the mask to apply to the extracted snippets")
    scheme1_detect_channel_radius: int = Field(150, description="Channel radius for excluding events that are too close in time in scheme 1")
    scheme2_phase1_detect_channel_radius: int = Field(200, description="Channel radius for excluding events that are too close in time during phase 1 of scheme 2")
    scheme2_detect_channel_radius: int = Field(50, description="Channel radius for excluding events that are too close in time during phase 2 of scheme 2")
    scheme2_max_num_snippets_per_training_batch: int = Field(200, description="Maximum number of snippets to use in each batch for training during phase 2 of scheme 2")
    scheme2_training_duration_sec: int = Field(60 * 5, description="Duration of training data to use in scheme 2")
    scheme2_training_recording_sampling_mode: str = Field("uniform", description="initial or uniform")
    scheme3_block_duration_sec: int = Field(60 * 30, description="Duration of each block in scheme 3")
    freq_min: int = Field(300, description="High-pass filter cutoff frequency")
    freq_max: int = Field(6000, description="Low-pass filter cutoff frequency")
    filter: bool = Field(True, description="Enable or disable filter")
    whiten: bool = Field(True, description="Enable or disable whitening - Important to do whitening")